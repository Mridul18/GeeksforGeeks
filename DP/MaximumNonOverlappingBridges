//https://www.geeksforgeeks.org/dynamic-programming-building-bridges/
#include<bits/stdc++.h>
using namespace std;

bool compare(pair<int,int> p1,pair<int,int> p2){
    if(p1.first==p2.first)
    return p1.second<p2.second;
    
    return p1.first<p2.first;
}

int main(){
    int n;
    cin>>n;
    vector<pair<int,int>> v(n);
    for(int i=0;i<n;i++)cin>>v[i].first>>v[i].second;
    
    sort(v.begin(),v.end(),compare);
    
    int dp[n];
    dp[0]=1;
    for(int i=1;i<=n;i++)
    {
        int temp=1;
        for(int j=0;j<i;j++)
        {
            if(v[j].second<v[i].second)
            temp=max(temp,dp[j]+1);
        }
        dp[i]=temp;
    }
    
    int ans=0;
    for(int i=0;i<n;i++)ans=max(ans,dp[i]);
    
    cout<<ans;
    
}
